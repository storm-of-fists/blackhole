static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000 # This is the port exposed in docker-compose
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          # Add the gRPC-Web filter here when ready
          # - name: envoy.filters.http.grpc_web
          #   typed_config:
          #     "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                direct_response: # Placeholder: just returns 200 OK
                  status: 200
                  body:
                    inline_string: "Envoy is running!"
  clusters: # You will define your Rust backend cluster here later
  # - name: my_rust_backend_service # Example name
  #   connect_timeout: 0.25s
  #   type: LOGICAL_DNS # or STRICT_DNS, or STATIC
  #   # dns_lookup_family: V4_ONLY # If your Rust service is IPv4 only
  #   lb_policy: ROUND_ROBIN
  #   load_assignment:
  #     cluster_name: my_rust_backend_service
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               # This will be the Docker service name of your Rust app
  #               address: YOUR_RUST_APP_SERVICE_NAME_HERE
  #               port_value: YOUR_RUST_APP_PORT_HERE # e.g., 50051 for gRPC

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901 # Admin interface port