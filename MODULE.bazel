### Python ###
bazel_dep(name = "rules_python", version = "0.27.1")

PYTHON_VERSION = "3.11"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")

python.toolchain(
    python_version = PYTHON_VERSION,
    is_default = True,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

pip.parse(
    hub_name = "third_party_py",
    python_version = PYTHON_VERSION,
    requirements_lock = "//third_party/python:requirements_lock.txt",
)

use_repo(pip, "third_party_py")

### Proto ###
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")

### GRPC ##
bazel_dep(name = "grpc", version = "1.48.1.bcr.2")

### Shell ###
bazel_dep(name = "rules_shellcheck", version = "0.2.4")

### C++ ###
bazel_dep(name = "rules_cc", version = "0.0.9")

### Skylib ###
bazel_dep(name = "bazel_skylib", version = "1.5.0")

### Codeowners ###
bazel_dep(name = "rules_codeowners", version = "0.2.1")

### Common Platforms ###
bazel_dep(name = "platforms", version = "0.0.8")

### Templating and config tools ###
bazel_dep(name = "bazel_advanced_config")

git_override(
    module_name = "bazel_advanced_config",
    remote = "https://github.com/ConnorJLatham/bazel-advanced-config",
    commit = "b27c027bd7c1b596e095c900c6baf4e619b9bedb",
)

### Packaging ###
bazel_dep(name = "rules_pkg", version = "0.9.1")

### Containers ###
# Fix a bad dep https://github.com/bazel-contrib/rules_oci/pull/449 TODO
bazel_dep(name = "aspect_bazel_lib", version = "1.36.0")

bazel_dep(name = "rules_oci", version = "1.5.1")
# For testing, we also recommend https://registry.bazel.build/modules/container_structure_test

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Declare external images you need to pull, for example:
oci.pull(
    name = "distroless_base",
    digest = "sha256:13b7e62e8df80264dbb747995705a986aa530415763a6c58f84a3ca8af9a5bcd",
    image = "index.docker.io/library/alpine",
)

# For each oci.pull call, repeat the "name" here to expose them as dependencies.
use_repo(oci, "distroless_base")
