# To find additional information on this release or newer ones visit:
# https://github.com/bazelbuild/rules_rust/releases
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_rust",
    sha256 = "9d04e658878d23f4b00163a72da3db03ddb451273eb347df7d7c50838d698f49",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.26.0/rules_rust-v0.26.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

RUST_STABLE_VERSION = "1.72.0"

RUST_NIGHTLY_VERSION = "nightly/2023-08-26"

rust_register_toolchains(
    edition = "2021",
    rust_analyzer_version = RUST_STABLE_VERSION,
    rustfmt_version = RUST_STABLE_VERSION,
    versions = [
        RUST_STABLE_VERSION,
        RUST_NIGHTLY_VERSION,
    ],
)

### RUST THIRD PARTY ###

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository", "render_config")
load("//tools/rust/external:crates.bzl", "third_party_crates")

crates_repository(
    name = "external_rust",
    cargo_lockfile = "//tools/rust/external:Cargo.Bazel.lock",
    lockfile = "//tools/rust/external:cargo-bazel-lock.json",
    packages = {
        name: crate.spec(
            default_features = info.get("default_features", True),
            features = info.get("features", []),
            version = info["version"],
        )
        for name, info in third_party_crates.items()
    },
    # Setting the default package name to `""` forces the use of the macros defined in this repository
    # to always use the root package when looking for dependencies or aliases. This should be considered
    # optional as the repository also exposes alises for easy access to all dependencies.
    render_config = render_config(
        default_package_name = "",
    ),
    rust_version = RUST_STABLE_VERSION,
)

load("@external_rust//:defs.bzl", "crate_repositories")

crate_repositories()

### Mypy ###
# http_archive(
#     name = "mypy_integration",
#     sha256 = "cf94c102fbaccb587eea8de5cf1cb7f55c5c74396a2468932c3a2a4df989aa1d",
#     strip_prefix = "bazel-mypy-integration-0.4.0",
#     url = "https://github.com/thundergolfer/bazel-mypy-integration/archive/refs/tags/0.4.0.tar.gz",
# )

# load(
#     "@mypy_integration//repositories:repositories.bzl",
#     mypy_integration_repositories = "repositories",
# )

# mypy_integration_repositories()

# load("@mypy_integration//:config.bzl", "mypy_configuration")

# # Optionally pass a MyPy config file, otherwise pass no argument.
# mypy_configuration("//tools/typing:mypy.ini")

# load("@mypy_integration//repositories:deps.bzl", mypy_integration_deps = "deps")

# mypy_integration_deps(
#     python_interpreter_target = "@python3_interpreter//:bin/python3",
# )

